
name: Release

env:
  DOCKER_IMAGE: godske/squad-vehicle-guide
  HELM_CHART_PATH:  "chart/values.yaml"
on:
  push:
    branches:
      - development


jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      release_tag: ${{ steps.build_and_push.outputs.RELEASE_VERSION }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build and Push Docker image
        id: build_and_push
        uses: Energinet-DataHub/.github/.github/actions/docker-build-and-push@2.3.0
        with:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }} 
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_IMAGE: ${{ env.DOCKER_IMAGE }}
          MAJOR: 0
          MINOR: 1
          PATCH: ${{ github.run_number }}
        
       # Create new github release
      - uses: "marvinpinto/action-automatic-releases@919008cf3f741b179569b7a6fb4d8860689ab7f0"
        with:
          repo_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          automatic_release_tag: ${{ steps.build_and_push.outputs.RELEASE_VERSION }}
          prerelease: false
          draft: false
          title: Release ${{ steps.build_and_push.outputs.RELEASE_VERSION }}
  
  update_helm_chart:
    name: Update Helm Chart
    runs-on: ubuntu-latest
    needs:
      - create_release
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          fetch-depth: 0
      
      - name: Replace docker tag
        uses: Energinet-DataHub/.github/.github/actions/regex-search-and-replace@731c5e2a1ec807416acc0d4dd3b244621e720bb7
        with:
          FILE_PATH: ${{ env.HELM_CHART_PATH }}
          NEW_VALUE: ${{ needs.create_release.outputs.release_tag }}
          REGEX_EXPRESSION: "^(?:.*tag: (.*))"
      
      - name: perform merge
        run: |
          git config --global user.name "github_action_bot"
          git config --global user.email "github_action_bot@users.noreply.github.com"
          git status
          git pull
          git checkout "${GITHUB_REF##*/}"
          git status
          git checkout "$GITHUB_HEAD_REF"
          git merge "${GITHUB_REF##*/}" --no-edit
          git push
          git status

      # Create a new branch and a pullrequest in the base environment
